<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pCong.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
  <data name="pTru.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        a81EWwAAAABJRU5ErkJggg==
</value>
  </data>
</root>